"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6995],{9672:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=t(5893),r=t(1151);const o={},s="Announcing Ribir v0.2.0",a={permalink:"/blog/ribir_v0.2.0",source:"@site/blog/ribir_v0.2.0.md",title:"Announcing Ribir v0.2.0",description:"We're excited to announce the completion of Ribir v0.2.0's development and the release of its first beta version. This release introduces two significant features: overlay support and the ability to use Ribir without \"DSL\".",date:"2024-04-09T02:50:21.000Z",formattedDate:"April 9, 2024",tags:[],readingTime:1.525,hasTruncateMarker:!1,authors:[],frontMatter:{},unlisted:!1,prevItem:{title:"Ribir v0.1.0",permalink:"/blog/ribir_v0.1.0"}},l={authorsImageUrls:[]},c=[{value:"Overlay Support",id:"overlay-support",level:2},{value:"Ribir without &quot;DSL&quot;",id:"ribir-without-dsl",level:2},{value:"Additional Changes",id:"additional-changes",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"We're excited to announce the completion of Ribir v0.2.0's development and the release of its first beta version. This release introduces two significant features: overlay support and the ability to use Ribir without \"DSL\"."}),"\n",(0,i.jsx)(n.h2,{id:"overlay-support",children:"Overlay Support"}),"\n",(0,i.jsx)(n.p,{children:"This feature simplifies the process of creating overlay widgets. It streamlines the addition of any widget to an overlay and provides a more user-friendly API for managing overlays."}),"\n",(0,i.jsx)(n.p,{children:"You can use any widget to create an overlay, which will then appear on top of the current screen."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use ribir::prelude::*;\n\nfn main() {\n  let overlay = Overlay::new(fn_widget! {\n    @Text {\n      h_align: HAlign::Center,\n      v_align: VAlign::Center,\n      text: "Hello"\n    }\n  });\n  \n  let w = fn_widget! {\n    @FilledButton{\n      on_tap: move |e| overlay.show(e.window()),\n      @{ Label::new("Click to show overlay") }\n    }\n  };\n  \n  App::run(w);\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Refer to its APIs to learn about all the features it offers."}),"\n",(0,i.jsx)(n.h2,{id:"ribir-without-dsl",children:'Ribir without "DSL"'}),"\n",(0,i.jsx)(n.p,{children:"While macros aren't a necessary part of using Ribir, our initial version didn't provide documentation or user-friendly APIs for building the UI without them. This release addresses that issue by providing a more straightforward API for building widgets without macros."}),"\n",(0,i.jsx)(n.p,{children:"With macros:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use ribir::prelude::*;\nfn main() {\n  let counter = fn_widget! {\n    let cnt = Stateful::new(0);\n    @Row {\n      @FilledButton {\n        on_tap: move |_| *$cnt.write() += 1,\n        @{ Label::new("Inc") }\n      }\n      @H1 { text: pipe!($cnt.to_string()) }\n    }\n  };\n  App::run(counter);\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Without macros:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use ribir::prelude::*;\n\nfn main() {\n  let counter = |ctx: &BuildCtx| {\n    let cnt = Stateful::new(0);\n\n    let c_cnt = cnt.clone_writer();\n    let inc_btn = FilledButton::declarer()\n      .on_tap(move |_| *c_cnt.write() += 1)\n      .finish(ctx)\n      .with_child(Label::new("Inc"), ctx);\n\n    let counter = H1::declarer()\n      .text(pipe!($cnt.to_string()))\n      .finish(ctx);\n\n    Row::declarer()\n      .finish(ctx)\n      .with_child(inc_btn, ctx)\n      .with_child(counter, ctx)\n      .build(ctx)\n  };\n\n  App::run(counter);\n}\n\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In this version, we've refined the APIs and updated the ",(0,i.jsx)(n.a,{href:"https://ribir.org/docs/understanding_ribir/without_dsl",children:"guide"}),' to demonstrate how to use Ribir without the "DSL" feature.']}),"\n",(0,i.jsx)(n.h2,{id:"additional-changes",children:"Additional Changes"}),"\n",(0,i.jsxs)(n.p,{children:["Visit the ",(0,i.jsx)(n.a,{href:"https://github.com/RibirX/Ribir/releases/tag/ribir-v0.2.0-beta.1",children:"Ribir"})," page for more details."]})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>s});var i=t(7294);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);