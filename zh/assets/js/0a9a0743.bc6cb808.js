"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[377],{578:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>a});var i=s(5893),t=s(1151);const d={sidebar_position:1},r="Ribir \u5b9e\u8df5\uff1a \u5b8c\u6574\u5f00\u53d1\u4e00\u4e2a Todos \u5e94\u7528",o={id:"practice_todos_app/develop_a_todos_app",title:"Ribir \u5b9e\u8df5\uff1a \u5b8c\u6574\u5f00\u53d1\u4e00\u4e2a Todos \u5e94\u7528",description:"\u672c\u6559\u7a0b\u5c06\u901a\u8fc7\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 Todos \u5e94\u7528\u6765\u5411\u4f60\u5c55\u793a\u4e00\u4e2a Ribir \u5e94\u7528\u7684\u5f00\u53d1\u65b9\u5f0f\uff0c\u540c\u65f6\u5e2e\u4f60\u5de9\u56fa Ribir \u7684\u57fa\u672c\u6982\u5ff5\u548c\u4f7f\u7528\u65b9\u6cd5\u3002",source:"@site/i18n/zh/docusaurus-plugin-content-docs/version-0.1.x/practice_todos_app/develop_a_todos_app.md",sourceDirName:"practice_todos_app",slug:"/practice_todos_app/develop_a_todos_app",permalink:"/zh/docs/practice_todos_app/develop_a_todos_app",draft:!1,unlisted:!1,tags:[],version:"0.1.x",lastUpdatedBy:"RChangelog[bot]",lastUpdatedAt:1707365037,formattedLastUpdatedAt:"2024\u5e742\u67088\u65e5",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Practice Todos App",permalink:"/zh/docs/category/practice-todos-app"},next:{title:"\u6539\u8fdb\u6837\u5f0f\u548c\u52a8\u753b",permalink:"/zh/docs/practice_todos_app/improving_styles_and_animations"}},l={},a=[{value:"\u524d\u63d0\u6761\u4ef6",id:"\u524d\u63d0\u6761\u4ef6",level:2},{value:"\u6700\u7ec8\u6548\u679c\u5c55\u793a",id:"\u6700\u7ec8\u6548\u679c\u5c55\u793a",level:2},{value:"\u4ee3\u7801\u7ed3\u6784",id:"\u4ee3\u7801\u7ed3\u6784",level:2},{value:"\u5185\u6838\u5f00\u53d1",id:"\u5185\u6838\u5f00\u53d1",level:2},{value:"\u63cf\u8ff0 UI",id:"\u63cf\u8ff0-ui",level:2},{value:"\u7528 Ribir \u642d\u5efa\u51fa\u6574\u4f53\u7ed3\u6784",id:"\u7528-ribir-\u642d\u5efa\u51fa\u6574\u4f53\u7ed3\u6784",level:3},{value:"\u589e\u52a0\u4efb\u52a1\u5f55\u5165\u80fd\u529b",id:"\u589e\u52a0\u4efb\u52a1\u5f55\u5165\u80fd\u529b",level:3},{value:"\u6dfb\u52a0\u4efb\u52a1\u5217\u8868",id:"\u6dfb\u52a0\u4efb\u52a1\u5217\u8868",level:3},{value:"\u589e\u52a0\u5bf9\u5355\u4e2a\u4efb\u52a1\u7684\u7f16\u8f91\u529f\u80fd",id:"\u589e\u52a0\u5bf9\u5355\u4e2a\u4efb\u52a1\u7684\u7f16\u8f91\u529f\u80fd",level:3},{value:"\u5b8c\u5584\u6837\u5f0f\u548c\u52a8\u753b",id:"\u5b8c\u5584\u6837\u5f0f\u548c\u52a8\u753b",level:2},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"ribir-\u5b9e\u8df5-\u5b8c\u6574\u5f00\u53d1\u4e00\u4e2a-todos-\u5e94\u7528",children:"Ribir \u5b9e\u8df5\uff1a \u5b8c\u6574\u5f00\u53d1\u4e00\u4e2a Todos \u5e94\u7528"}),"\n",(0,i.jsx)(n.p,{children:"\u672c\u6559\u7a0b\u5c06\u901a\u8fc7\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 Todos \u5e94\u7528\u6765\u5411\u4f60\u5c55\u793a\u4e00\u4e2a Ribir \u5e94\u7528\u7684\u5f00\u53d1\u65b9\u5f0f\uff0c\u540c\u65f6\u5e2e\u4f60\u5de9\u56fa Ribir \u7684\u57fa\u672c\u6982\u5ff5\u548c\u4f7f\u7528\u65b9\u6cd5\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u8be5\u5e94\u7528\u5c06\u5141\u8bb8\u4f60\u6dfb\u52a0\u3001\u5220\u9664\u3001\u7f16\u8f91\u548c\u6807\u8bb0\u4efb\u52a1\uff0c\u5e76\u63d0\u4f9b\u81ea\u52a8\u4fdd\u5b58\u529f\u80fd\u3002"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u4f60\u5c06\u4e86\u89e3\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u5982\u4f55\u7528 Ribir \u63a8\u8350\u7684\u65b9\u5f0f\u5f00\u53d1\u8bbe\u8ba1\u4e00\u4e2a Todos \u5f15\u7528"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u524d\u63d0\u6761\u4ef6",children:"\u524d\u63d0\u6761\u4ef6"}),"\n",(0,i.jsx)(n.p,{children:"\u4e3a\u4e86\u5b8c\u6210\u672c\u6559\u7a0b\uff0c\u6211\u4eec\u5047\u8bbe\u4f60\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u4e86\u89e3 ",(0,i.jsx)(n.a,{href:"https://www.rust-lang.org/learn",children:"Rust"})," \u8bed\u8a00\u7684\u57fa\u7840\u77e5\u8bc6\u548c\u8bed\u6cd5"]}),"\n",(0,i.jsxs)(n.li,{children:["\u5b8c\u6210\u4e86\u524d\u7f6e\u6559\u7a0b ",(0,i.jsx)(n.a,{href:"/zh/docs/get_started/quick_start",children:"\u5feb\u901f\u4e0a\u624b"})," \u7cfb\u5217"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u6700\u7ec8\u6548\u679c\u5c55\u793a",children:"\u6700\u7ec8\u6548\u679c\u5c55\u793a"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"todos demo",src:s(574).Z+"",width:"1078",height:"1336"})}),"\n",(0,i.jsx)(n.h2,{id:"\u4ee3\u7801\u7ed3\u6784",children:"\u4ee3\u7801\u7ed3\u6784"}),"\n",(0,i.jsx)(n.p,{children:"\u4f5c\u4e3a\u4e00\u4e2a GUI \u6846\u67b6\uff0cRibir \u6700\u91cd\u8981\u7684\u4e00\u4e2a\u76ee\u6807\u5c31\u662f\u8ba9\u4f60\u5728\u5e94\u7528\u8bbe\u8ba1\u4e4b\u521d\uff0c\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\uff08\u4e1a\u52a1\u903b\u8f91\uff09\u7684\u62bd\u8c61\uff0c\u800c\u5b8c\u5168\u4e0d\u7528\u8003\u8651 UI\u3002UI \u5219\u4f5c\u4e3a\u4e00\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u6a21\u5757\u5f00\u53d1\uff0c\u4e24\u8005\u4e4b\u95f4\u901a\u8fc7\u524d\u8005\u5b9a\u4e49\u7684 API \u5b8c\u6210\u8fde\u63a5\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u56e0\u6b64\uff0c\u5728 Ribir \u4ed3\u5e93\u4e2d\uff0c\u4f60\u4f1a\u53d1\u73b0\u51e0\u4e4e\u6240\u6709\u975e\u7eaf\u7cb9\u7684\u754c\u9762\u5c55\u793a\u7684\u4f8b\u5b50\u90fd\u6709\u8fd9\u6837\u4e24\u4e2a\u4e3b\u8981\u7684\u6587\u4ef6\uff1a\u4e00\u4e2a\u548c\u5e94\u7528\u540c\u540d\u7684 ",(0,i.jsx)(n.code,{children:"xxx.rs"})," \u6587\u4ef6\uff0c\u5b9e\u73b0\u4e86\u5e94\u7528\u7684\u6838\u5fc3\u6570\u636e\u548c\u903b\u8f91\uff1b\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"ui.rs"})," \u6587\u4ef6\u5b9e\u73b0\u4e86\u5bf9\u6838\u5fc3\u6570\u636e\u7684 UI \u63cf\u8ff0\u3002\u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"main.rs"})," \u6587\u4ef6\u4f5c\u4e3a\u5e94\u7528\u7684\u5165\u53e3\u3002"]}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e5f\u7528\u540c\u6837\u7684\u65b9\u5f0f\u6765\u7ec4\u7ec7\u6211\u4eec\u7684 Todos \u5e94\u7528\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"- src\n  - main.rs\n  - todos.rs\n  - ui.rs\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u5185\u6838\u5f00\u53d1",children:"\u5185\u6838\u5f00\u53d1"}),"\n",(0,i.jsx)(n.p,{children:"Ribir \u4e0d\u4f1a\u4e00\u5f00\u59cb\u5c31\u8003\u8651\u505a\u63a7\u4ef6\u7684\u5212\u5206\u3001\u5c42\u7ea7\u7ed3\u6784\u7684\u7ec4\u7ec7\uff0cUI \u72b6\u6001\u7684\u7ba1\u7406\u7b49\u3002Ribir \u4f1a\u63a8\u8350\u4f60\u5148\u62bd\u8c61\u597d\u5e94\u7528\u7684\u6838\u5fc3\u6570\u636e\u7ed3\u6784\u548c\u903b\u8f91\uff0c\u8bbe\u8ba1\u5b9a\u4e49\u597d API\uff0c\u518d\u57fa\u4e8e\u4f60\u7684\u6570\u636e\u548c\u89c6\u89c9\u6548\u679c\u6765\u7ec4\u7ec7\u4f60\u7684 UI\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u5f53\u7136\uff0c\u5982\u679c\u662f\u591a\u4eba\u5f00\u53d1\uff0c\u4e0a\u9762\u8fd9\u4e9b\u5de5\u4f5c\u53ef\u4ee5\u662f\u5e76\u884c\u5c55\u5f00\u7684\u3002\u56e0\u4e3a\u4f60\u9700\u8981\u72ec\u81ea\u5b8c\u6210\u5168\u672c\u7ae0\u6559\u7a0b\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6309\u987a\u5e8f\u4e00\u6b65\u6b65\u6765\u3002\u7b2c\u4e00\u6b65\u5148\u6765\u5b8c\u6210\u6838\u5fc3\u6570\u636e\u7ed3\u6784\u90e8\u5206\u7684\u5f00\u53d1\uff0c\u5e76\u5b8c\u5168\u4e0d\u53bb\u8003\u8651 UI \u7684\u4e8b\u60c5\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:'// todos.rs\n\nuse serde::{Deserialize, Serialize};\nuse std::{\n  collections::BTreeMap,\n  fs::File,\n  io::{self, BufWriter, Write},\n};\n\n#[derive(Debug, Serialize, Deserialize)]\npub struct Todos {\n  tasks: BTreeMap<TaskId, Task>,\n  next_id: TaskId,\n}\n\n#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]\npub struct Task {\n  id: TaskId,\n  pub complete: bool,\n  pub label: String,\n}\n\n#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Serialize, Deserialize)]\npub struct TaskId(usize);\n\nimpl Todos {\n  pub fn new_task(&mut self, label: String) -> TaskId {\n    let id = self.next_id;\n    self.next_id = self.next_id.next();\n    self.tasks.insert(id, Task { id, label, complete: false });\n    \n    id\n  }\n\n  pub fn remove(&mut self, id: TaskId) { self.tasks.remove(&id); }\n\n  pub fn get_task(&self, id: TaskId) -> Option<&Task> { self.tasks.get(&id) }\n\n  pub fn get_task_mut(&mut self, id: TaskId) -> Option<&mut Task> { self.tasks.get_mut(&id) }\n\n  pub fn all_tasks(&self) -> impl Iterator<Item = TaskId> + \'_ { self.tasks.keys().copied() }\n}\n\nimpl Task {\n  pub fn id(&self) -> TaskId { self.id }\n}\n\nimpl Todos {\n  pub fn load() -> Self {\n    std::fs::read(Self::store_path())\n      .map(|v| serde_json::from_slice(v.as_slice()).unwrap())\n      .unwrap_or_else(|_| Todos {\n        tasks: BTreeMap::new(),\n        next_id: TaskId(0),\n      })\n  }\n\n  pub fn save(&self) -> Result<(), io::Error> {\n    let file = File::create(Self::store_path())?;\n    let mut writer = BufWriter::new(file);\n    serde_json::to_writer(&mut writer, self)?;\n    writer.flush()?;\n    Ok(())\n  }\n\n  fn store_path() -> std::path::PathBuf { std::env::temp_dir().join("ribir_todos.json") }\n}\n\nimpl TaskId {\n  pub fn next(&self) -> Self { Self(self.0 + 1) }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Todos"})," \u5185\u6838\u4e3b\u8981\u7531 ",(0,i.jsx)(n.code,{children:"Todos"}),", ",(0,i.jsx)(n.code,{children:"Task"})," \u548c ",(0,i.jsx)(n.code,{children:"TaskId"})," \u4e09\u4e2a\u7c7b\u578b\u7ec4\u6210\uff0c\u5176\u4e2d ",(0,i.jsx)(n.code,{children:"Todos"})," \u662f\u4e00\u4e2a\u5305\u542b\u4e86\u6240\u6709\u4efb\u52a1\u7684\u5217\u8868\uff0c",(0,i.jsx)(n.code,{children:"Task"})," \u662f\u4e00\u4e2a\u4efb\u52a1\u7684\u7ed3\u6784\u4f53\uff0c",(0,i.jsx)(n.code,{children:"TaskId"})," \u662f\u4efb\u52a1\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002",(0,i.jsx)(n.code,{children:"Todos"})," \u63d0\u4f9b\u4e86\u5bf9\u4efb\u52a1\u7684\u589e\u5220\u6539\u67e5\u7684\u65b9\u6cd5\uff0c\u5e76\u63d0\u4f9b\u4e86\u4fdd\u5b58\u5230\u6587\u4ef6\u7684\u80fd\u529b\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4f60\u8fd8\u9700\u8981\u7f16\u5199\u5b8c\u5907\u7684\u5355\u5143\u6d4b\u8bd5\u6765\u4fdd\u8bc1\u4f60\u7684\u4ee3\u7801\u7684\u6b63\u786e\u6027\u3002"]}),"\n",(0,i.jsx)(n.p,{children:"\u8fd9\u90e8\u5206\u5de5\u4f5c\u4e0e\u4f60\u5e73\u65f6\u5199\u65e0\u754c\u9762\u7684 Rust \u4ee3\u7801\u7684\u65b9\u5f0f\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\uff0c\u4f60\u53ef\u4ee5\u6309\u7167\u81ea\u5df1\u7684\u4e60\u60ef\u6765\u7ec4\u7ec7\u4ee3\u7801\uff0c\u53ea\u8981\u6700\u540e\u80fd\u591f\u63d0\u4f9b\u5b8c\u6574\u80fd\u529b\u7684 API \u5373\u53ef\u3002\u5728 Ribir \u5e94\u7528\u7684\u7684\u8bbe\u8ba1\u7406\u5ff5\u4e2d\uff0c\u8fd9\u90e8\u5206\u5de5\u4f5c\u975e\u5e38\u91cd\u8981\uff0c\u4f46\u5374\u4e0d\u662f\u672c\u6559\u7a0b\u7684\u91cd\u70b9\uff0c\u5982\u679c\u4f60\u719f\u6089 Rust \u8bed\u6cd5\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u8f7b\u6613\u7406\u89e3\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Tips"}),"\n",(0,i.jsx)(n.p,{children:"\u57fa\u4e8e\u8fd9\u6837\u4e00\u4e2a\u7ed3\u6784\uff0c\u5b8c\u6210\u8fd9\u90e8\u5206\u5de5\u4f5c\u540e\uff0c\u4f60\u53ef\u4ee5\u8f7b\u6613\u5c06\u4f60\u7684\u6838\u5fc3\u90e8\u5206\u53d8\u6210\u4e00\u4e2a\u5e93,\u5e76\u4ee5\u6b64\u521b\u5efa\u4e00\u4e2a CLI \u5e94\u7528\uff0c\u6765\u7ed9\u4f60\u7684\u7528\u6237\u63d0\u4f9b\u66f4\u597d\u7684\u5f00\u53d1\u4f53\u9a8c\u548c\u66f4\u591a\u7684\u4f7f\u7528\u573a\u666f\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u73b0\u5728\u4f60\u7684\u5e94\u7528\uff0c\u5df2\u7ecf\u6709\u4e86\u5b8c\u5907\u7684\u903b\u8f91\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u4efb\u4f55\u754c\u9762\u3002\u4e0b\u4e00\u6b65\uff0c\u8ba9\u6211\u4eec\u7528 Ribir \u6765\u4e3a\u5b83\u6784\u5efa\u4e00\u4e2a\u754c\u9762\u3002"}),"\n",(0,i.jsx)(n.h2,{id:"\u63cf\u8ff0-ui",children:"\u63cf\u8ff0 UI"}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u6b63\u5f0f\u8fdb\u5165 UI \u5f00\u53d1\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u5bf9\u7167\u539f\u578b\u56fe\u5212\u5206\u51e0\u4e2a\u4e3b\u8981\u90e8\u5206\uff0c\u4ee5\u65b9\u4fbf\u540e\u6587\u7684\u4ea4\u6d41\uff1a"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{target:"_blank",href:s(5661).Z+"",children:"todos-widgets"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Title \u6807\u9898\u533a\uff0c\u5c55\u793a\u5e94\u7528\u7684\u540d\u79f0"}),"\n",(0,i.jsx)(n.li,{children:"Input \u533a\uff0c\u8f93\u5165\u4efb\u52a1\u5185\u5bb9\uff0c\u6309\u56de\u8f66\u952e\u6dfb\u52a0\u4efb\u52a1"}),"\n",(0,i.jsx)(n.li,{children:"Task Tabs\uff0c\u4efb\u52a1\u9009\u9879\u5361\uff0c\u5206\u4e3a All, Active \u548c Completed \u4e09\u4e2a\u9009\u9879\u5361\uff0c\u5206\u522b\u5c55\u793a\u5bf9\u5e94\u4efb\u52a1\u5217\u8868"}),"\n",(0,i.jsx)(n.li,{children:"Task\uff0c\u5355\u4e2a\u4efb\u52a1\u7684\u5c55\u793a\uff0c\u63d0\u4f9b\u7f16\u8f91\uff0c\u6807\u8bb0\u5b8c\u6210\u548c\u5220\u9664\u529f\u80fd\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u7528-ribir-\u642d\u5efa\u51fa\u6574\u4f53\u7ed3\u6784",children:"\u7528 Ribir \u642d\u5efa\u51fa\u6574\u4f53\u7ed3\u6784"}),"\n",(0,i.jsxs)(n.p,{children:["\u6211\u4eec\u5df2\u7ecf\u5728 ",(0,i.jsx)(n.a,{href:"#%E5%86%85%E6%A0%B8%E5%BC%80%E5%8F%91",children:"\u5185\u6838\u5f00\u53d1"})," \u4e2d\u5b9a\u4e49\u597d ",(0,i.jsx)(n.code,{children:"Todos"})," \u7c7b\u578b\u4f5c\u4e3a\u6839\u6570\u636e\u7ed3\u6784\uff0c\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 ",(0,i.jsx)(n.code,{children:"Compose"})," \u4ece\u5b83\u5f00\u59cb\u5bf9\u6574\u4e2a UI \u8fdb\u884c\u63cf\u8ff0\u4e86\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5148\u5728 ",(0,i.jsx)(n.code,{children:"main.rs"})," \u4e2d\u5f15\u5165 ",(0,i.jsx)(n.code,{children:"todos.rs"})," \u548c ",(0,i.jsx)(n.code,{children:"ui.rs"}),"\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"main"})," \u51fd\u6570\u4f5c\u4e3a\u5e94\u7528\u5165\u53e3\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:'//  main.rs\n\nmod todos;\nmod ui;\n\nuse ribir::prelude::*;\nuse std::time::Duration;\n\nfn main() {\n  let todos = State::value(todos::Todos::load());\n\n  // save changes to disk every 5 seconds .\n  let save_todos = todos.clone_reader();\n  \n  watch!($todos;)\n    .debounce(Duration::from_secs(5), AppCtx::scheduler())\n    .subscribe(move |_| {\n      if let Err(err) = save_todos.read().save() {\n        log::error!("Save tasks failed: {}", err);\n      }\n    });\n\n  App::run(fn_widget! { todos })\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u5728 ",(0,i.jsx)(n.code,{children:"main.rs"})," \u4e2d\uff0c\u5148\u521b\u5efa\u4e86\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"State"})," \u6765\u4fdd\u5b58 ",(0,i.jsx)(n.code,{children:"Todos"})," \u6570\u636e\uff0c\u5e76\u5c06\u5b83\u5f53\u505a\u6839 widget \u4f20\u9012\u7ed9 ",(0,i.jsx)(n.code,{children:"App::run"})," \u65b9\u6cd5\uff0c\u8fd9\u6837\u5e94\u7528\u5c31\u53ef\u4ee5\u8fd0\u884c\u8d77\u6765\u4e86\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u540c\u65f6\u5bf9 ",(0,i.jsx)(n.code,{children:"todos"})," \u7684\u53d8\u66f4\u8fdb\u884c\u4e86\u76d1\u542c\uff0c\u5e76\u5c06\u5176\u6bcf\u9694 5 \u79d2\u949f\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\u3002\u5f53\u7136\uff0c\u4f60\u7684\u5e94\u7528\u73b0\u5728\u8fd8\u6ca1\u6709\u4efb\u4f55\u4ea4\u4e92\uff0c\u65e0\u6cd5\u5bf9 ",(0,i.jsx)(n.code,{children:"todos"})," \u8fdb\u884c\u4fee\u6539\uff0c\u6240\u4ee5\u4fdd\u5b58\u903b\u8f91\u4e0d\u4f1a\u89e6\u53d1\uff0c\u4f46\u5f88\u5feb\u5f53\u4f60\u6dfb\u52a0\u4e86\u4ea4\u4e92\uff0c\u5c31\u80fd\u7528\u7684\u4e0a\u8fd9\u4e2a\u81ea\u52a8\u4fdd\u5b58\u7684\u529f\u80fd\u4e86\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u6ce8\u610f\u5230 ",(0,i.jsx)(n.code,{children:"watch!($todo;)"})," \u4e2d\u7684 ",(0,i.jsx)(n.code,{children:";"})," \u53f7\u4e86\u5417\uff1f \u8fd9\u662f\u6545\u610f\u7684\uff0c\u56e0\u4e3a\u4e0d\u60f3\u63a5\u6536 ",(0,i.jsx)(n.code,{children:"todos"})," \u7684\u53d8\u66f4\u7ed3\u679c\uff0c\u800c\u53ea\u60f3\u77e5\u9053\u5b83\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u5728\u8ba2\u9605\u51fd\u6570\u4e2d\u53bb\u8bfb\u53d6\u5b83\u7684\u6700\u65b0\u503c\u53bb\u4fdd\u5b58\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u63a5\u4e0b\u6765\uff0c\u5728 ",(0,i.jsx)(n.code,{children:"ui.rs"})," \u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff0c\u6765\u5c06 ",(0,i.jsx)(n.code,{children:"Todos"})," \u63cf\u8ff0\u4e3a\u4e00\u4e2a widget\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:'// ui.rs\nuse ribir::prelude::*;\n\nimpl Compose for Todos {\n  fn compose(this: impl StateWriter<Value = Self>) -> impl WidgetBuilder {\n    fn_widget! {\n      @Column {\n        align_items: Align::Center,\n        item_gap: 12.,\n        @H1 { text: "Todo" }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u73b0\u5728\uff0c\u5f53\u4f60\u901a\u8fc7 ",(0,i.jsx)(n.code,{children:"cargo run"}),' \u8fd0\u884c\u65f6\uff0c\u4f60\u5c06\u770b\u5230\u7a97\u53e3\u4e0a\u9762\u4ec5\u6709\u4e00\u4e2a\u6807\u9898 "Todo"\u3002\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06 ',(0,i.jsx)(n.code,{children:"Column"})," \u4f5c\u4e3a ",(0,i.jsx)(n.code,{children:"Todo"})," \u7684\u6839 widget\uff0c\u5b83\u662f\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"Render"})," \u7c7b\u578b\u7684 widget\uff0c\u80fd\u591f\u5c06\u5b83\u7684\u5b69\u5b50\u6309\u7167\u5782\u76f4\u65b9\u5411\u6392\u5217\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u76f8\u5173\u5c5e\u6027\uff0c\u8fd9\u91cc\u6211\u4eec\u8bbe\u7f6e\u4e86 ",(0,i.jsx)(n.code,{children:"align_items"})," \u4e3a ",(0,i.jsx)(n.code,{children:"Align::Center"}),"\uff0c\u8868\u793a\u5c06\u5b69\u5b50\u4eec\u5728\u5782\u76f4\u65b9\u5411\u4e0a\u5c45\u4e2d\u5bf9\u9f50\uff0c",(0,i.jsx)(n.code,{children:"item_gap"})," \u4e3a ",(0,i.jsx)(n.code,{children:"12."}),"\uff0c\u8868\u793a\u5b69\u5b50\u4e4b\u95f4\u7684\u95f4\u9694\u4e3a 12 \u4e2a\u903b\u8f91\u50cf\u7d20\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u5148\u5f80 ",(0,i.jsx)(n.code,{children:"Column"})," \u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u7684\u4efb\u52a1\u9009\u9879\u5361\uff0c\u6491\u8d77\u6211\u4eec\u6574\u4e2a\u7ed3\u6784\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:'@Tabs {\n  @Tab {\n    @TabItem { @{ Label::new("ALL") } }\n    @TabPane {\n      @{ fn_widget!{ @Text { text: "Coming Soon!" } }}\n    }\n  }\n  @Tab {\n    @TabItem { @{ Label::new("ACTIVE") } }\n    @TabPane {\n      @{ fn_widget!{ @Text { text: "Coming Soon!" } } }\n    }\n  }\n  @Tab {\n    @TabItem { @{ Label::new("DONE") } }\n    @TabPane {\n      @{ fn_widget!{ @Text { text: "Coming Soon!" } }}\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u540c\u6837 ",(0,i.jsx)(n.code,{children:"Tabs"})," \u4e5f\u662f Ribir widgets \u5e93\u4e3a\u6211\u4eec\u63d0\u4f9b\u7684\uff0c\u5b83\u662f\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"ComposeChild"})," widget\uff0c\u5e76\u4e14\u89c4\u5b9a\u4e86\u5b83\u7684\u5b69\u5b50\u5fc5\u987b\u662f ",(0,i.jsx)(n.code,{children:"Tab"})," \u7c7b\u578b\u3002\u56e0\u4e3a\uff0c\u6211\u4eec\u73b0\u5728\u8fd8\u6ca1\u6709\u51c6\u5907\u597d ",(0,i.jsx)(n.code,{children:"Tab"})," \u4e2d\u8981\u5c55\u793a\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u7528\u4e86\u4e00\u4e2a \u201cComing soon!\u201d \u7684 ",(0,i.jsx)(n.code,{children:"Text"})," \u6765\u5360\u4f4d\u3002\u4e0d\u8fc7\uff0c\u5728 ",(0,i.jsx)(n.code,{children:"TabPane"})," \u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u76f4\u63a5\u4f7f\u7528 ",(0,i.jsx)(n.code,{children:"Text"})," \u63a7\u4ef6\uff0c\u800c\u662f\u7528\u4e86\u4e00\u4e2a\u51fd\u6570 widget \u6765\u4f5c\u4e3a\u5b69\u5b50\uff0c\u8fd9\u662f\u56e0\u4e3a ",(0,i.jsx)(n.code,{children:"Tabs"})," \u89c4\u5b9a\u4e86 ",(0,i.jsx)(n.code,{children:"TabPane"})," \u7684\u5185\u5bb9\u5fc5\u987b\u662f\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"GenWidget"}),", \u56e0\u4e3a\u5b83\u53ea\u60f3\u6784\u5efa\u6d3b\u52a8 ",(0,i.jsx)(n.code,{children:"Tab"})," \u5bf9\u5e94\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u6240\u6709 ",(0,i.jsx)(n.code,{children:"Tab"}),"\u3002\u800c\u4e00\u4e2a\u652f\u6301\u591a\u6b21\u8c03\u7528\u7684\u51fd\u6570 widget \u53ef\u4ee5\u8f6c\u6362\u6210 ",(0,i.jsx)(n.code,{children:"GenWidget"}),"\u3002"]}),"\n",(0,i.jsx)(n.h3,{id:"\u589e\u52a0\u4efb\u52a1\u5f55\u5165\u80fd\u529b",children:"\u589e\u52a0\u4efb\u52a1\u5f55\u5165\u80fd\u529b"}),"\n",(0,i.jsxs)(n.p,{children:["\u73b0\u5728\uff0c\u6211\u4eec\u6765\u6dfb\u52a0\u5f55\u5165\u6570\u636e\u7684\u80fd\u529b: \u5728 ",(0,i.jsx)(n.code,{children:"Column"})," \u4e2d\u6dfb\u52a0\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"Input"}),"\uff0c\u54cd\u5e94\u56de\u8f66\u6309\u94ae\u5c06 ",(0,i.jsx)(n.code,{children:"Input"})," \u4e2d\u7684\u5185\u5bb9\u4f5c\u4e3a\u4efb\u52a1\u6dfb\u52a0\u5230 ",(0,i.jsx)(n.code,{children:"Todos"})," \u4e2d\u3002 \u7b49\u7b49\uff0c\u6211\u4eec\u8981\u600e\u4e48\u5728\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"Input"})," \u4e2d\u7684\u4e8b\u4ef6\u56de\u8c03\u4e2d\uff0c\u8bbf\u95ee ",(0,i.jsx)(n.code,{children:"Input"})," \u81ea\u5df1\u5462\uff1f"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:"@Input {\n  on_key_down: move |e| {\n    if e.key_code() == &PhysicalKey::Code(KeyCode::Enter) {\n      // \u5982\u4f55\u83b7\u5f97 Input \u81ea\u5df1\uff1f\n    }\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u597d\u5728\uff0cRibir \u975e\u5e38\u6613\u4e8e\u548c Rust \u4ea4\u4e92\uff0c\u8fd8\u8bb0\u5f97\u5728",(0,i.jsx)(n.a,{href:"/zh/docs/get_started/quick_start#compose-widget--%E6%8F%8F%E8%BF%B0%E4%BD%A0%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84",children:"\u7ec4\u5408 widget"})," \u4e2d\u8bb2\u5230\u7684\u901a\u8fc7\u53d8\u91cf\u58f0\u660e\u5b69\u5b50\u5417\uff1f"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:'\n@ {\n  let input = @Input {};\n  @$input {\n    on_key_down: move |e| {\n    if e.key_code() == &PhysicalKey::Code(KeyCode::Enter)\n      && !$input.text().is_empty() {\n        $this.write().new_task($input.text().to_string());\n        $input.write().set_text("");\n      }\n    },\n    @{ Placeholder::new("What do you want to do ?") }\n  }\n}\n\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u73b0\u5728\uff0c\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u6dfb\u52a0\u5230 ",(0,i.jsx)(n.code,{children:"Column"})," \u7684 ",(0,i.jsx)(n.code,{children:"Tabs"})," \u4e4b\u524d\u3002\u4f60\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u8f93\u5165\u6846\u5f55\u5165\u65b0\u7684\u4efb\u52a1\u4e86\u3002"]}),"\n",(0,i.jsx)(n.h3,{id:"\u6dfb\u52a0\u4efb\u52a1\u5217\u8868",children:"\u6dfb\u52a0\u4efb\u52a1\u5217\u8868"}),"\n",(0,i.jsxs)(n.p,{children:["\u76ee\u524d\uff0c",(0,i.jsx)(n.code,{children:"Tab"})," \u4e2d\u8fd8\u6ca1\u6709\u4efb\u4f55\u5185\u5bb9\u5c55\u793a\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u6765\u6dfb\u52a0\u5b83\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u4e09\u4e2a\u9009\u9879\u5361\u7684\u867d\u7136\u5185\u5bb9\u4e0d\u4e00\u6837\uff0c\u4f46\u90fd\u6709\u540c\u6837\u7684\u5c55\u793a\u7ed3\u6784\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u5c06\u5b83\u4eec\u62bd\u8c61\u6210\u4e00\u4e2a widget\u3002\u56e0\u4e3a\u6ca1\u6709\u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u7528\u4e00\u4e2a\u51fd\u6570\u63a7\u4ef6\u6765\u5b9e\u73b0\u5b83\uff0c\u5047\u8bbe\u8fd9\u4e2a\u51fd\u6570\u88ab\u547d\u540d\u4e3a ",(0,i.jsx)(n.code,{children:"task_list"}),"\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u7b2c\u4e8c\u4e2a\u53ef\u4ee5\u62bd\u8c61\u7684 widget \u662f ",(0,i.jsx)(n.code,{children:"Task"}),"\uff0c\u5b83\u867d\u7136\u6709\u81ea\u5df1\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u6211\u4eec\u5374\u4e0d\u6253\u7b97\u901a\u8fc7 ",(0,i.jsx)(n.code,{children:"Compose"})," \u6765\u628a\u5b83\u63cf\u8ff0\u4e3a widget \u3002\u56e0\u4e3a\u6211\u4eec\u60f3\u5c06\u5bf9 ",(0,i.jsx)(n.code,{children:"Task"})," \u7684\u5220\u9664\u529f\u80fd\u4e5f\u5b9e\u73b0\u5728\u8fd9\u4e2a widget \u4e2d\uff0c\u800c\u4ec5\u51ed",(0,i.jsx)(n.code,{children:"Task"})," \u81ea\u5df1\u662f\u65e0\u6cd5\u5b9e\u73b0\u5220\u9664\u7684\u3002\u6240\u4ee5\uff0c\u4e5f\u62bd\u8c61\u4e00\u4e2a\u51fd\u6570\u63a7\u4ef6\uff0c\u65b9\u4fbf\u83b7\u53d6\u4e0a\u4e0b\u6587\uff0c\u5047\u8bbe\u8fd9\u4e2a\u51fd\u6570\u88ab\u547d\u540d\u4e3a ",(0,i.jsx)(n.code,{children:"task_item"}),"\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u5148\u6765\u770b ",(0,i.jsx)(n.code,{children:"task_list"})," \u7684\u5b9e\u73b0\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:"// ui.rs\n\n...\n\nfn task_lists(this: &impl StateWriter<Value = Todos>, filter: fn(&Task) -> bool) -> GenWidget {\n  let this = this.clone_writer();\n  fn_widget! {\n    @VScrollBar {\n      @Lists {\n        @ { pipe!($this;).map(move |_| {\n          // \u8fd9\u91cc\u6545\u610f\u5199\u4e00\u884c\u4e0d\u4f1a\u6267\u884c\u7684\u4ee3\u7801, \u544a\u8bc9 Ribir \n          // \u5f53\u524d\u95ed\u5305\u9700\u8981\u6355\u83b7 `this` \u7684 Writer \u800c\u4e0d\u662f Reader\n          let _hint_capture_writer = || $this.write();\n          \n          let mut widgets = vec![];\n          for id in $this.all_tasks() {\n            if $this.get_task(id).map_or(false, filter) {\n              let task = this.split_writer(\n                move |todos| todos.get_task(id).unwrap(),\n                move |todos| todos.get_task_mut(id).unwrap(),\n              );\n              widgets.push(task_item(task));\n            }\n          }\n          widgets\n        }) }\n      }\n    }\n  }\n  .into()\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u8fd9\u4e2a\u51fd\u6570\u63a7\u4ef6\u7528 ",(0,i.jsx)(n.code,{children:"Lists"})," \u6765\u5448\u73b0\u6574\u4e2a\u5217\u8868\u7684\uff0c\u5e76\u901a\u8fc7 ",(0,i.jsx)(n.code,{children:"pipe!($this;).map(move |_| { ... })"})," \u76d1\u542c ",(0,i.jsx)(n.code,{children:"this"})," \u7684\u4fee\u6539\uff0c\u786e\u4fdd\u4efb\u52a1\u5217\u8868\u7684\u5185\u5bb9\u4f1a\u968f\u7740 ",(0,i.jsx)(n.code,{children:"this"})," \u7684\u53d8\u5316\u800c\u53d8\u5316\uff0c\u6700\u540e\u901a\u8fc7\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"VScrollBar"})," \u6765\u63d0\u4f9b\u6eda\u52a8\u80fd\u529b\u3002"]}),"\n",(0,i.jsx)(n.p,{children:"\u6ce8\u610f\u5230\u72b6\u6001\u5206\u88c2\u8fd9\u4e00\u884c\u4e86\u5417\uff1f"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:"let task = this.split_writer(\n  move |todos| todos.get_task(id).unwrap(),\n  move |todos| todos.get_task_mut(id).unwrap(),\n);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u5b83\u4ece ",(0,i.jsx)(n.code,{children:"this"})," \u4e2d\u5206\u88c2\u51fa\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"Task"})," \u7684 ",(0,i.jsx)(n.code,{children:"Writer"}),", \u5e76\u628a\u5b83\u4f20\u9012\u7ed9 ",(0,i.jsx)(n.code,{children:"task_item"})," \u51fd\u6570\u63a7\u4ef6\uff0c\u8fd9\u6837\u5728 ",(0,i.jsx)(n.code,{children:"task_item"})," \u63a7\u4ef6\u4e2d\u5c31\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539 ",(0,i.jsx)(n.code,{children:"Task"})," \u6570\u636e\u800c\u4e0d\u5f71\u54cd\u6574\u4e2a ",(0,i.jsx)(n.code,{children:"Todos"})," \u7684\u754c\u9762\u4e86\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u5728",(0,i.jsx)(n.code,{children:"task_lists"}),"\u4e2d\uff0c\u6709\u4e00\u4e2a tricky \u7684\u5730\u65b9\uff0c\u4f60\u4e00\u5b9a\u4e5f\u6ce8\u610f\u5230\u4e86\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:"let _hint_capture_writer = || $this.write();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u4e3a\u4f55\u9700\u8981\u8fd9\u4e00\u884c\u4ee3\u7801\uff1f\u56e0\u4e3a Ribir \u5728\u89e3\u6790 move \u95ed\u5305\u65f6\u4f1a\u6839\u636e\u95ed\u5305\u5185\u662f\u5426\u4f7f\u7528\u4e86 ",(0,i.jsx)(n.code,{children:"$this"})," \u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u6765\u5e2e\u52a9\u4f60\u5728\u95ed\u5305\u524d\u81ea\u52a8\u5bf9 this \u7684 reader \u6216 writer \u8fdb\u884c\u6355\u83b7\uff0c\u907f\u514d\u4f60\u9700\u8981\u624b\u52a8\u8fdb\u884c clone_reader \u6216 clone_writer\u3002\u5f53 move \u95ed\u5305\u4e2d\u53ea\u4f7f\u7528\u4e86\u8bfb\u5f15\u7528\uff08$this\uff09\uff0c\u5c31\u6355\u83b7 Reader\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u5199\u5f15\u7528\uff08",(0,i.jsx)(n.code,{children:"$this.write()"})," \u6216 ",(0,i.jsx)(n.code,{children:"$this.silent()"}),"\uff09\uff0c\u5219\u6355\u83b7 Writer\u3002\u800c\u4e0a\u9762\u7684\u95ed\u5305\u4e2d\uff0c\u5b8c\u5168\u6ca1\u6709\u7528\u5230\u7684 ",(0,i.jsx)(n.code,{children:"$this"})," \u7684\u5199\u5f15\u7528\uff0c\u4f46\u5374\u9700\u8981\u901a\u8fc7 ",(0,i.jsx)(n.code,{children:"this"})," \u5206\u88c2\u4e00\u4e2a\u5b50 ",(0,i.jsx)(n.code,{children:"Writer"})," \u2014\u2014 \u53ea\u6709 Writer \u624d\u80fd\u5206\u88c2\u5b50 ",(0,i.jsx)(n.code,{children:"Writer"}),"\u3002\u56e0\u6b64\u6545\u610f\u5199\u4e0b\u8fd9\u4e00\u884c\uff0c\u6765\u5f3a\u5236 Ribir \u6355\u83b7 ",(0,i.jsx)(n.code,{children:"this"})," \u7684 ",(0,i.jsx)(n.code,{children:"Writer"}),"\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u518d\u6765\u770b ",(0,i.jsx)(n.code,{children:"task_item"})," \u7684\u5b9e\u73b0\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:"// ui.rs\n\n...\n\nfn task_item<S>(task: S) -> impl WidgetBuilder\nwhere\n  S: StateWriter<Value = Task> + 'static,\n  S::OriginWriter: StateWriter<Value = Todos>,\n{\n  let todos = task.origin_writer().clone_writer();\n\n  fn_widget! {\n    let id = $task.id();\n    let checkbox = @Checkbox { checked: pipe!($task.complete) };\n    watch!($checkbox.checked)\n      .distinct_until_changed()\n      .subscribe(move |v| $task.write().complete = v);\n\n    @ListItem {\n      @{ HeadlineText(Label::new($task.label.clone())) }\n      @Leading {\n        @{ CustomEdgeWidget(checkbox.widget_build(ctx!())) }\n      }\n      @Trailing {\n        cursor: CursorIcon::Pointer,\n        on_tap: move |_| $todos.write().remove(id),\n        @{ svgs::CLOSE }\n      }\n    }\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u5728\u8fd9\u4e2a\u51fd\u6570\u63a7\u4ef6\u4e2d\uff0c\u6709\u610f\u601d\u7684\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u5e76\u6ca1\u6709\u901a\u8fc7\u53c2\u6570\u6765\u4f20\u9012 ",(0,i.jsx)(n.code,{children:"Todos"}),", \u800c\u662f\u89c4\u5b9a\u4e86 ",(0,i.jsx)(n.code,{children:"Task"})," \u5fc5\u987b\u662f\u4ece ",(0,i.jsx)(n.code,{children:"Todos"})," \u4e2d\u5206\u88c2\u51fa\u6765\u7684\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u53cd\u5411\u62ff\u5230 ",(0,i.jsx)(n.code,{children:"Todos"})," \u7684 ",(0,i.jsx)(n.code,{children:"Writer"})," \uff0c\u4ece\u800c\u5b9e\u73b0\u5220\u9664\u529f\u80fd\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u63a5\u7740\uff0c\u7528 ",(0,i.jsx)(n.code,{children:"Checkbox"})," \u6765\u5c55\u793a\u4efb\u52a1\u662f\u5426\u5b8c\u6210\uff0c\u5e76\u76d1\u542c\u5b83\u7684\u53d8\u5316\uff0c\u5c06\u53d8\u5316\u540c\u6b65\u56de ",(0,i.jsx)(n.code,{children:"Task"})," \u4e2d\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u6700\u540e\uff0c\u7528 ",(0,i.jsx)(n.code,{children:"ListItem"})," \u6765\u5c55\u793a\u4e00\u4e2a\u5b8c\u6574\u4efb\u52a1\uff0c\u5c06 ",(0,i.jsx)(n.code,{children:"Checkbox"}),", \u5220\u9664\u6309\u94ae\u548c\u4efb\u52a1\u5185\u5bb9\u7ec4\u5408\u5728\u4e00\u8d77\u3002",(0,i.jsx)(n.code,{children:"ListItem"})," \u4e5f\u662f Ribir widgets \u5e93\u63d0\u4f9b\u7684\u4e00\u4e2a widget\uff0c\u5e76\u89c4\u5b9a\u4e86\u81ea\u5df1\u7684\u5b69\u5b50\u7c7b\u578b\uff0c\u8fd9\u91cc\u7528\u5230\u4e86 ",(0,i.jsx)(n.code,{children:"HeadlineText"})," \u6765\u5c55\u793a\u6807\u9898\uff0c ",(0,i.jsx)(n.code,{children:"Leading"})," \u8868\u793a\u5934\u90e8\u5185\u5bb9\uff0c",(0,i.jsx)(n.code,{children:"Trailing"})," \u8868\u793a\u5c3e\u90e8\u5185\u5bb9\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u73b0\u5728\uff0c\u5728 ",(0,i.jsx)(n.code,{children:"Todos"})," \u7684 ",(0,i.jsx)(n.code,{children:"compose"})," \u4e2d\u627e\u5230 ",(0,i.jsx)(n.code,{children:"TabPane"})," \u5e76\u7528 ",(0,i.jsx)(n.code,{children:"task_lists"}),' \u6765\u66ff\u6362\u6389\u539f\u6765\u7684 "coming soon!" \u5427\uff1a']}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:'// ui.rs\n\n...\n\n@Tabs {\n  @Tab {\n    @TabItem { @{ Label::new("ALL") } }\n    // new\n    @TabPane { @{ task_lists(&this, |_| true) } }\n  }\n  @Tab {\n    @TabItem { @{ Label::new("ACTIVE") } }\n    // new\n    @TabPane { @{ task_lists(&this, |t| !t.complete )} }\n  }\n  @Tab {\n    @TabItem { @{ Label::new("DONE") } }\n    // new\n    @TabPane { @{ task_lists(&this, |t| t.complete )} }\n  }\n}\n\n...\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\u589e\u52a0\u5bf9\u5355\u4e2a\u4efb\u52a1\u7684\u7f16\u8f91\u529f\u80fd",children:"\u589e\u52a0\u5bf9\u5355\u4e2a\u4efb\u52a1\u7684\u7f16\u8f91\u529f\u80fd"}),"\n",(0,i.jsx)(n.p,{children:"\u4f60\u7684 Todos \u5e94\u7528\u5df2\u7ecf\u57fa\u672c\u5b8c\u6210\u4e86\uff0c\u4e0d\u8fc7\u8fd8\u5dee\u6700\u540e\u4e00\u6b65: \u589e\u52a0\u53cc\u51fb\u4efb\u52a1\u8fdb\u884c\u7f16\u8f91\u5185\u5bb9\u7684\u529f\u80fd\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u901a\u8fc7\u53cc\u51fb\u6765\u8bb0\u5f55\u4efb\u52a1\u7684\u7f16\u8f91\u72b6\u6001\uff0c\u5f53\u4e00\u4e2a\u4efb\u52a1\u4e0d\u662f\u7f16\u8f91\u72b6\u6001\u65f6\uff0c\u5c55\u793a ",(0,i.jsx)(n.code,{children:"task_item"}),", \u5426\u5219\u5c55\u793a\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"Input"}),"\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u56de\u5230 ",(0,i.jsx)(n.code,{children:"task_lists"})," \u4e2d\uff0c\u505a\u5982\u4e0b\u4fee\u6539\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:"\nfn_widget! {\n    // new: \u65b0\u589e\u4e00\u4e2a\u72b6\u6001\uff0c\u8bb0\u5f55\u7f16\u8f91\u4efb\u52a1\u7684 Id\n    let editing = Stateful::new(None);\n\n    @VScrollBar {\n      @Lists {\n        @ { pipe!($this;).map(move |_| {\n          let _hint_capture_this = || $this.write();\n          let mut widgets = vec![];\n\n          for id in $this.all_tasks() {\n            if $this.get_task(id).map_or(false, cond) {\n              let task = this.split_writer(\n                move |todos| todos.get_task(id).unwrap(),\n                move |todos| todos.get_task_mut(id).unwrap(),\n              );\n              // new: \u5982\u679c\u4efb\u52a1\u5904\u4e8e\u7f16\u8f91\u72b6\u6001\uff0c\u5219\u663e\u793a\u8f93\u5165\u6846\uff0c\u5426\u5219\u663e\u793a\u4efb\u52a1\u9879\n              let item = pipe!(*$editing == Some($task.id()))\n                .value_chain(|s| s.distinct_until_changed().box_it())\n                .map(move |b|{\n                  if b {\n                    let input = @Input { auto_focus: true };\n                    $input.write().set_text(&$task.label);\n                    @$input {\n                      on_key_down: move |e| {\n                        let key = e.key_code();\n                        if key == &PhysicalKey::Code(KeyCode::Escape) {\n                          *$editing.write() = None;\n                        } else if e.key_code() == &PhysicalKey::Code(KeyCode::Enter) {\n                          let label = $input.text().to_string();\n                          if !label.is_empty() {\n                            $task.write().label = label;\n                            *$editing.write() = None;\n                          }\n                        }\n                      }\n                    }.widget_build(ctx!())\n                  } else {\n                    let item = task_item(task.clone_writer());\n                    @$item {\n                      on_double_tap: move |_| *$editing.write() = Some(id)\n                    }.widget_build(ctx!())\n                  }\n                });\n              widgets.push(item);\n            }\n          }\n          widgets\n        }) }\n      }\n    }\n  }\n  .into()\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u5230\u8fd9\u91cc\uff0c\u4f60\u7684 Todos \u5e94\u7528\u5df2\u7ecf\u5b8c\u6210\u4e86\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c\u5b83\uff0c\u6dfb\u52a0\u3001\u5220\u9664\u3001\u6807\u8bb0\u4efb\u52a1\uff0c\u53cc\u51fb\u8fdb\u884c\u7f16\u8f91\uff0c\u751a\u81f3\u53ef\u4ee5\u5173\u95ed\u5e94\u7528\uff0c\u518d\u6b21\u6253\u5f00\u65f6\uff0c\u4f60\u7684\u4efb\u52a1\u5217\u8868\u8fd8\u5728\uff0c\u56e0\u4e3a\u4f60\u7684\u6570\u636e\u4f1a\u81ea\u52a8\u5c06\u4efb\u52a1\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u901a\u8fc7\u8fd9\u4e2a\u6559\u7a0b\uff0c\u4f60\u5e94\u8be5\u53d1\u73b0\u4e86 Ribir \u7684\u4e00\u4e9b\u7279\u70b9\uff0cRibir \u4e0d\u5f3a\u8c03 UI \u7684\u72b6\u6001\u7ba1\u7406\uff0c\u800c\u662f\u901a\u8fc7 API \u5bf9\u6570\u636e\u8fdb\u884c\u76f4\u63a5\u64cd\u4f5c\uff0cUI \u5219\u81ea\u52a8\u54cd\u5e94\u6570\u636e\u7684\u53d8\u5316\u3002\u800c\u72b6\u6001\uff0c\u53ea\u662f\u5c06\u6570\u636e\u8f6c\u6362\u4e3a\u53ef\u88ab\u4fa6\u542c\u7684\u4e00\u4e2a\u5305\u88c5\u3002\u8fd9\u6837\u7684\u8bbe\u8ba1\uff0c\u8ba9\u4f60\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u548c API \u7684\u8bbe\u8ba1\uff0c\u800c UI \u5219\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 API \u6765\u5c55\u793a\u548c\u64cd\u4f5c\u6570\u636e\u3002\u6d88\u53bb\u4e2d\u95f4\u5c42\uff0c\u4e5f\u6d88\u53bb\u4e86\u7531\u8fd9\u4e9b\u4e2d\u95f4\u5c42\u5e26\u6765\u7684\u590d\u6742\u6027\u3002"}),"\n",(0,i.jsx)(n.h2,{id:"\u5b8c\u5584\u6837\u5f0f\u548c\u52a8\u753b",children:"\u5b8c\u5584\u6837\u5f0f\u548c\u52a8\u753b"}),"\n",(0,i.jsxs)(n.p,{children:["\u5728\u4e0a\u9762\u7684\u6559\u7a0b\u4e2d\uff0c\u4f60\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684 Todos \u5e94\u7528\uff0c\u4f46\u662f\u5b83\u7684\u6837\u5f0f\u548c\u4ea4\u4e92\u8fd8\u4e0d\u591f\u6f02\u4eae\u548c\u73b0\u4ee3\uff0c\u5982\u679c\u4f60\u60f3\u8fdb\u4e00\u6b65\u5b8c\u5584\u4f60\u7684\u5e94\u7528\uff0c\u4f60\u53ef\u4ee5\u5230",(0,i.jsx)(n.a,{href:"/zh/docs/practice_todos_app/improving_styles_and_animations",children:"\u5b8c\u5584\u6837\u5f0f\u548c\u52a8\u753b"}),"\u7ee7\u7eed Todos \u5e94\u7528\u7684\u65c5\u7a0b\u3002"]}),"\n",(0,i.jsx)(n.h2,{id:"\u5b8c\u6574\u4ee3\u7801",children:"\u5b8c\u6574\u4ee3\u7801"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:"ignore",children:'// main.rs\nmod todos;\nmod ui;\nuse ribir::prelude::*;\nuse std::time::Duration;\n\nfn main() {\n  let todos = State::value(todos::Todos::load());\n\n  // save changes to disk every 5 seconds .\n  let save_todos = todos.clone_reader();\n  \n  watch!($todos;)\n    .debounce(Duration::from_secs(5), AppCtx::scheduler())\n    .subscribe(move |_| {\n      if let Err(err) = save_todos.read().save() {\n        log::error!("Save tasks failed: {}", err);\n      }\n    });\n\n  App::run(fn_widget! { todos })\n}\n\n// todos.rs\nuse serde::{Deserialize, Serialize};\nuse std::{\n  collections::BTreeMap,\n  fs::File,\n  io::{self, BufWriter, Write},\n};\n\n#[derive(Debug, Serialize, Deserialize)]\npub struct Todos {\n  tasks: BTreeMap<TaskId, Task>,\n  next_id: TaskId,\n}\n\n#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]\npub struct Task {\n  id: TaskId,\n  pub complete: bool,\n  pub label: String,\n}\n\n#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Serialize, Deserialize)]\npub struct TaskId(usize);\n\nimpl Todos {\n  pub fn new_task(&mut self, label: String) -> TaskId {\n    let id = self.next_id;\n    self.next_id = self.next_id.next();\n\n    self.tasks.insert(id, Task { id, label, complete: false });\n    id\n  }\n\n  pub fn remove(&mut self, id: TaskId) { self.tasks.remove(&id); }\n\n  pub fn get_task(&self, id: TaskId) -> Option<&Task> { self.tasks.get(&id) }\n\n  pub fn get_task_mut(&mut self, id: TaskId) -> Option<&mut Task> { self.tasks.get_mut(&id) }\n\n  pub fn all_tasks(&self) -> impl Iterator<Item = TaskId> + \'_ { self.tasks.keys().copied() }\n}\n\nimpl Task {\n  pub fn id(&self) -> TaskId { self.id }\n}\n\nimpl Todos {\n  pub fn load() -> Self {\n    std::fs::read(Self::store_path())\n      .map(|v| serde_json::from_slice(v.as_slice()).unwrap())\n      .unwrap_or_else(|_| Todos {\n        tasks: BTreeMap::new(),\n        next_id: TaskId(0),\n      })\n  }\n\n  pub fn save(&self) -> Result<(), io::Error> {\n    let file = File::create(Self::store_path())?;\n    let mut writer = BufWriter::new(file);\n    serde_json::to_writer(&mut writer, self)?;\n    writer.flush()?;\n    Ok(())\n  }\n\n  fn store_path() -> std::path::PathBuf { std::env::temp_dir().join("ribir_todos.json") }\n}\n\nimpl TaskId {\n  pub fn next(&self) -> Self { Self(self.0 + 1) }\n}\n\n\n// ui.rs\n\nuse crate::todos::{Task, Todos};\nuse ribir::prelude::{svgs, *};\nuse std::time::Duration;\n\nimpl Compose for Todos {\n  fn compose(this: impl StateWriter<Value = Self>) -> impl WidgetBuilder {\n    fn_widget! {\n      @Column {\n        align_items: Align::Center,\n        item_gap: 12.,\n        @H1 { text: "Todo" }\n        @ {\n          let input = @Input {};\n          @$input {\n            on_key_down: move |e| {\n            if e.key_code() == &PhysicalKey::Code(KeyCode::Enter)\n              && !$input.text().is_empty() {\n                $this.write().new_task($input.text().to_string());\n                $input.write().set_text("");\n              }\n            },\n            @{ Placeholder::new("What do you want to do ?") }\n          }\n        }\n        @Tabs {\n          @Tab {\n            @TabItem { @{ Label::new("ALL") } }\n            @TabPane { @{ task_lists(&this, |_| true) } }\n          }\n          @Tab {\n            @TabItem { @{ Label::new("ACTIVE") } }\n            @TabPane { @{ task_lists(&this, |t| !t.complete )} }\n          }\n          @Tab {\n            @TabItem { @{ Label::new("DONE") } }\n            @TabPane { @{ task_lists(&this, |t| t.complete )} }\n          }\n        }\n      }\n    }\n  }\n}\n\nfn task_lists(this: &impl StateWriter<Value = Todos>, cond: fn(&Task) -> bool) -> GenWidget {\n  let this = this.clone_writer();\n  fn_widget! {\n    let editing = Stateful::new(None);\n\n    @VScrollBar {\n      @Lists {\n        @ { pipe!($this;).map(move |_| {\n          let _hint_capture_this = || $this.write();\n          let mut widgets = vec![];\n\n          for id in $this.all_tasks() {\n            if $this.get_task(id).map_or(false, cond) {\n              let task = this.split_writer(\n                move |todos| todos.get_task(id).unwrap(),\n                move |todos| todos.get_task_mut(id).unwrap(),\n              );\n              let item = pipe!(*$editing == Some($task.id()))\n                .value_chain(|s| s.distinct_until_changed().box_it())\n                .map(move |b|{\n                  if b {\n                    let input = @Input { auto_focus: true };\n                    $input.write().set_text(&$task.label);\n                    @$input {\n                      on_key_down: move |e| {\n                        let key = e.key_code();\n                        if key == &PhysicalKey::Code(KeyCode::Escape) {\n                          *$editing.write() = None;\n                        } else if e.key_code() == &PhysicalKey::Code(KeyCode::Enter) {\n                          let label = $input.text().to_string();\n                          if !label.is_empty() {\n                            $task.write().label = label;\n                            *$editing.write() = None;\n                          }\n                        }\n                      }\n                    }.widget_build(ctx!())\n                  } else {\n                    let item = task_item(task.clone_writer());\n                    @$item {\n                      on_double_tap: move |_| *$editing.write() = Some(id)\n                    }.widget_build(ctx!())\n                  }\n                });\n              widgets.push(item);\n            }\n          }\n          widgets\n        }) }\n      }\n    }\n  }\n  .into()\n}\n\nfn task_item<S>(task: S) -> impl WidgetBuilder\nwhere\n  S::OriginWriter: StateWriter<Value = Todos>,\n{\n  let todos = task.origin_writer().clone_writer();\n\n  fn_widget! {\n    let id = $task.id();\n    let item = @ListItem {};\n    let checkbox = @Checkbox { checked: pipe!($task.complete) };\n    watch!($checkbox.checked)\n      .distinct_until_changed()\n      .subscribe(move |v| $task.write().complete = v);\n\n    @$item {\n      @{ HeadlineText(Label::new($task.label.clone())) }\n      @Leading {\n        @{ CustomEdgeWidget(checkbox.widget_build(ctx!())) }\n      }\n      @Trailing {\n        cursor: CursorIcon::Pointer,\n        on_tap: move |_| $todos.write().remove(id),\n        @{ svgs::CLOSE }\n      }\n    }\n  }\n}\n\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},5661:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/files/todos-widgets-0adfa3f25343fc1f0f2410f3d9d4447d.png"},574:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/todos-demo-4e85183aefdfff31b6cb89525c4216c3.gif"},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>r});var i=s(7294);const t={},d=i.createContext(t);function r(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);